#include <iostream>
using namespace std;

class car
{
    int carID;
    string brand;
    string model;
    double rentalPrice;
    bool availabilityStatus;
    int totalDays;
    double totalRevenue;

public:
    //  member initializer : 
    car(string b, string m, double r, bool s, double rev , int id) : carID(id) , brand (b), model(m), rentalPrice(r), availabilityStatus(s), totalRevenue(rev) , totalDays(0) {};

    // copy constructor;
    // car(const car &b)
    // {
    //     brand = b.brand;
    //     model = b.model;
    //     rentalPrice = b.rentalPrice;
    //     availabilityStatus = b.availabilityStatus;
    //     totalRevenue = b.totalRevenue;
    // }

    void updateDetails(string n, string m, double r, bool s, double rev)
    {
        brand = n;
        model = m;
        rentalPrice = r;
        availabilityStatus = s;
        totalRevenue = rev;
    }
    void checkingAvailability()
    {
        if (availabilityStatus)
        {
            cout << "the car " << brand << " is available for rent" << endl;
        }
        else
        {
            cout << "the car " << brand << " is unavailable" << endl;
        }
    }
    void rentalRequest()
    {
        if (availabilityStatus)
        {
            cout << "the car " << brand << " is available for the rent....." << endl;
            cout << "Enter the number of days you want to rent the " << brand << " car for: ";
            cin >> totalDays;
            RevenueGenerated();
            this->availabilityStatus = false;
        }
        else
        {
            cout << "the car " << brand << " not available for the  rent" << endl;
        }
    }

    int ApplyDiscoutRent(int x)
    {
        if (x > 5 && x <= 10)
        {
            return 5;
        }
        else if (x > 10)
        {
            return 10;
        }
        else
        {
            return 0;
        }
    }

    void returnRentalRequest (int id) {
        if(carID==id) {
            if(!availabilityStatus) {
            cout<<"returned car sucessfully"<<endl;
availabilityStatus= true;
totalDays = 0;
        }

        else {
            cout<<"returned request declined as its already available in our record"<<endl;
        }
    }

    }
    void displayDetails()
    {
        cout<<"-------------------------CAR DETAILS: -----------------------------------------"<<endl;
        cout<<" | carID : "<<carID<<endl;
        cout << "  |  brand : " << brand <<endl;
        cout << "  |  model : " << model <<endl;
        cout << "  |  rental price: " << rentalPrice <<endl;
        cout << "  |  availability status: " << (availabilityStatus ? "AVAILABLE " : "NOT AVAILABLE") << endl;
        ;
        cout << "the total revenue generated from the car is: " << totalRevenue << endl;
    }

    void RevenueGenerated()
    {
        int x = ApplyDiscoutRent(totalDays);
        double totalRent;
        if (x == 0)
        {
            cout << "the car " << brand << " is rented for " << totalDays << " days with no discount" << endl;
            totalRent = totalDays * rentalPrice;
            cout << "the total rent for the car is: " << totalRent << endl;
        }
        else
        {
            cout << "the car " << brand << " is rented for " << totalDays << " days with " << x << "% discount" << endl;
            totalRent = totalDays * rentalPrice * (1 - (x / 100.0));
            cout << "the total rent for the car is: " << totalRent << endl;
        }
        this->totalRevenue += totalRent;
    }

    ~car()
    {
        cout << "car " << brand << " removed from the memory" << endl;
    }
};

int main()
{
    cout << "initializes car1:" << endl;
    car c1("corolla", "Corolla", 1000.0, true, 0.0 , 1) ;
    cout << endl;

    cout << "checking the details for car 1: " << endl;
    c1.displayDetails();

    // cout << "initilaizing car 2 thorugh copy constructor" << endl;
    // car c2(c1);
    // // car c3(1);

    // // c1.updateDetails( "corolla", "Corolla", 1000.0, true);
    // // c2.updateDetails( "Toyota", "CorollaI", 10.0, true);
    // // c3.updateDetails( "BMW", "CorollaII", 100.0, true);
    cout<<"renting the car"<<endl;
     c1.rentalRequest();

     cout << "checking the details for car 1 after renting: " << endl;
    c1.displayDetails();

    // cout << endl;


    // // c3.rentalRequest();
    // // c3.checkingAvailability ();
    // cout << endl;
    // c1.updateDetails("Toyota", "CorollaI", 10.0, false, 0.0); // assuming that the car id of the car cant be update;
    // cout << endl;

    cout << "returning the car : " << endl;
    // c1.displayDetails();
    c1.returnRentalRequest(1);

    cout << "checking the details for car 1 after  returning  it  : " << endl;
    c1.displayDetails();



    cout<<"renting the car"<<endl;
    c1.rentalRequest();


    cout << "checking the details for car 1 after renting it again : " << endl;
    c1.displayDetails();
    cout << endl;

    return 0;
}

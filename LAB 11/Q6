#include <iostream>
#include "stdexcept"
using namespace std;

class NegativeStockException : public exception
{
};
class OverCapacityException : public exception
{
};

template <typename T>
class InventoryItem
{
private:
    T stock;
    T maxc;

public:
    InventoryItem(T max) : stock(0), maxc(max)
    {
    }
    void setstock(T v)
    {
        if (v < 0)
        {
            throw NegativeStockException();
        }
        if (v > maxc)
        {
            throw OverCapacityException();
        }
        stock = v;
        cout << "Stock successfully set to: " << stock << endl;
    }
};

int main()
{
    InventoryItem<int> i(100);
    try
    {
        cout << "Attempting to set stock to -5..\n";
        i.setstock(-5);
    }
    catch (NegativeStockException &n)
    {
        cout << "Caught NegativeStockException - ";
        cout << "what(): " << n.what() << endl;
    }

    try
    {
        cout << "\nAttempting to set stock to 120 (max 100)...\n";
        i.setstock(120);
    }
    catch (OverCapacityException &e)
    {
        cout << "Caught OverCapacityException - ";
        cout << "what(): " << e.what() << endl;
    }
}

#include<iostream>
using namespace std;

void input(int** ptr , int rows , int cols) {
    for (int i =0;i<rows;i++) {
        for (int j =0;j<cols;j++) {
            cout<<"enter the element at index "<<i<<" "<<j<<endl;
            cin>>ptr[i][j];
        }
    }
}

int** matricesAddition(int **mat1 , int ** mat2 ,int  r ,int c) {
    cout<<"adding matrices"<<endl; 
    int ** result = new int*[r];
    for (int i=0; i<r;i++) {
        result[i]= new int[c];
    }

    for (int j=0;j<r;j++) {
        for (int k=0;k<c;k++) {
            result[j][k] = mat1[j][k] + mat2[j][k];
        }
    }
return result;

 }
 

int** matricesSubtraction(int **mat1 , int ** mat2 ,int  r , int c ) {
cout<<"subtracting matrices"<<endl; 
    int ** result = new int*[r];
    for (int i=0; i<r;i++) {
        result[i]= new int[c];
    }

    for (int j=0;j<r;j++) {
        for (int k=0;k<c;k++) {
            result[j][k] = mat1[j][k] - mat2[j][k];
        }
    }
return result;

 }
 

void DisplayMatrix(int ** matrix  ,int r, int c ) {
    for (int i=0;i<r;i++) {
        for(int j=0;j<c;j++) {
            cout << matrix[i][j]<<"\t";
        }
        cout<<endl;
    }
}
void deAllocatMemory (int **matrix , int r ) {
    for (int i =0 ;i<r;i++) {
        delete[]matrix[i];
    }

    delete []matrix;
}


int main() {
int r1 , r2,c1, c2;
cout<<"enter no of rows : " <<endl;
cin>>r1;
cout<<"enter no of cols : "<<endl;
cin>>c1;

cout<<"enter no of rows for matrix 2: " <<endl;
cin>>r2;
cout<<"enter no of cols for matrix 2 : "<<endl;
cin>>c2;


cout<<"allocating memory for matrix 1"<<endl;
int **mat1 = new int*[r1];
for (int i=0;i<r1 ;i++) {
    mat1[i] = new int[c1];
}

cout<<"taking input for matrix 1: "<<endl;
input(mat1,r1, c1);

cout<<"allocating memory for matrix 2"<<endl;
int **mat2 = new int*[r2];
for (int i =0;i<r2 ;i++) {
    mat2[i] = new int[c2];

}
cout<<"taking input for matrix 2:"<<endl;
input(mat2, r2, c2);
if (r1==r2 && c1==c2) {

int** resultAdd = matricesAddition(mat1 , mat2 , r1  , c1 );
int** resultSub= matricesSubtraction(mat1 , mat2 , r1 , c1 );


cout<<"addition of the matrix 1 and matrix 2 is : " <<endl;
DisplayMatrix( resultAdd, r1, c1 );
cout<<"subtraction of the matrix 1 and matrix 2 is : "<<endl;
DisplayMatrix( resultSub, r1, c1 );

cout<< " forwarding towards deallocating the memory of resulted matrices ...... "<<endl;
deAllocatMemory (resultAdd, r1 );
cout<<"suceesfully deallocated the memory for addition matrix; "<<endl;
deAllocatMemory (resultSub , r1);
cout<<"sucessfully deallocated the memory for subtraction matrix ; "<<endl;
cout<< " forwarding towards deallocating the memory of our original  matrix 1 and matrix 2 ...... "<<endl;
deAllocatMemory (mat1 , r1 );
cout<<"sucessfully deallocated the memory for matrix 1; "<<endl;
deAllocatMemory (mat2 , r2);
cout<<"sucessfully deallocated the memory for matrix 2; "<<endl;

}
else {
    cout<<"no of rows and cols are not equal , hence addition or subtraction not possible!"<<endl;


cout<< " forwarding towards deallocating the memory...... "<<endl;
deAllocatMemory (mat1 , r1 );
cout<<"sucessfully deallocated the memory for matrix 1; "<<endl;
deAllocatMemory (mat2 , r2);
cout<<"sucessfully deallocated the memory for matrix 2; "<<endl;
};



    return 0;
}
